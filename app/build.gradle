apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.example.its.baseapplication"
        minSdkVersion 23
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        manifestPlaceholders = [
                appIcon : "${APP_ICON}"
        ]

        //共通の設定箇所
        buildConfigField "String", "EXAMPLE_API_PATH", "${EXAMPLE_API_PATH}"
        buildConfigField "int", "REQUEST_TIMEOUT", "${REQUEST_TIMEOUT}"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [moduleName: project.getName()]
            }
        }
    }
    buildTypes {
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    appIcon : "${APP_ICON}"
            ]
            buildConfigField "boolean", "IS_SHAKEABLE", "${IS_SHAKEABLE}"
            buildConfigField "boolean", "CHECK_USB", "${CHECK_USB}"
            buildConfigField "boolean", "CHECK_ROOT", "${CHECK_ROOT}"
            buildConfigField "boolean", "TRUST_ALL_HOST", "${IS_SHAKEABLE}"
            buildConfigField "String", "DOMAIN", "${DOMAIN}"
        }
        debug {
            debuggable true
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            manifestPlaceholders = [
                    appIcon : "${APP_ICON_DEBUG}"
            ]
            buildConfigField "boolean", "IS_SHAKEABLE", "${IS_SHAKEABLE_DEBUG}"
            buildConfigField "boolean", "CHECK_USB", "${CHECK_USB_DEBUG}"
            buildConfigField "boolean", "CHECK_ROOT", "${CHECK_ROOT_DEBUG}"
            buildConfigField "boolean", "TRUST_ALL_HOST", "${IS_SHAKEABLE_DEBUG}"
            buildConfigField "String", "DOMAIN", "${DOMAIN_DEBUG}"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.android.support:appcompat-v7:27.1.1'
    implementation 'com.android.support:support-v4:27.1.1'
    implementation 'com.android.support.constraint:constraint-layout:1.1.2'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

    //opensource
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.4.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'io.reactivex.rxjava2:rxjava:2.1.15'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.2'
    implementation 'com.alibaba:arouter-api:1.3.1'
    annotationProcessor 'com.alibaba:arouter-compiler:1.1.4'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.8.1'
    implementation 'org.greenrobot:eventbus:3.1.1'
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'net.zetetic:android-database-sqlcipher:3.5.2'

    //その他Libraryは該当アプリのsupportパッケージと突合の対応
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '27.1.1'
                }
            }
        }
    }
}

greendao{
    schemaVersion 1
    daoPackage 'com.example.its.baseapplication.common.database'
    targetGenDir 'src/main/java'
}
